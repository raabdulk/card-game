{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/./src/components/logicOfGame.ts","webpack://card-game/./src/components/gameBoard.ts","webpack://card-game/./src/components/difficultyPage.ts","webpack://card-game/./src/components/timerForGame.ts","webpack://card-game/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { guessedCards, cardsArrayResult, arreysNull } from '../index';\nimport { renderYouLose, renderYouWon } from './gameBoard';\nvar opened = false;\nvar firstCard, secondCard;\nvar boardLocked = false;\nvar classSelector;\nexport var stopTimer = false;\n// export let stopTimerFalse = () => (stopTimer = false);\n//Открываем карту и присваиваем карте класс\nvar flipCard = function (e) {\n    if (boardLocked)\n        return;\n    var target = e.target;\n    if (target === firstCard)\n        return;\n    console.log(target);\n    target.classList.remove('closed-card');\n    if (!opened) {\n        //Первый клик\n        opened = true;\n        firstCard = target;\n    }\n    else {\n        //Второй клик\n        opened = false;\n        secondCard = target;\n        //Сравниваем\n        comparison();\n    }\n};\n//Функция сравнения\nvar comparison = function () {\n    if (firstCard.classList.value === secondCard.classList.value) {\n        alert('Победа');\n        pushGuessedCards();\n    }\n    else {\n        boardLocked = true;\n        setTimeout(function () {\n            firstCard.classList.add('closed-card');\n            secondCard.classList.add('closed-card');\n            boardLocked = false;\n            classSelector = document.querySelectorAll('closed-card');\n        }, 1000);\n        renderYouLose();\n        arreysNull();\n    }\n};\n//Навешиваем обработчик кликов на элементы с id='card'\nexport var logicOfGame = function () {\n    var cards = document.querySelectorAll('#card');\n    cards.forEach(function (card) {\n        card.addEventListener('click', flipCard);\n    });\n};\n//Заполнение массива отгаданных карт\nvar pushGuessedCards = function () {\n    guessedCards.push(firstCard.classList.value);\n    guessedCards.push(secondCard.classList.value);\n    console.log('Массив отгаданных карт:', guessedCards);\n    if (cardsArrayResult.length === guessedCards.length) {\n        console.log('Запускаем уведомление');\n        // stopInterval({ forInterval });\n        renderYouWon();\n        stopTimer = true;\n        arreysNull();\n        stopTimer = false;\n    }\n};\n","import { appEl, cardsArray, cardsArrayResult, cardsArrayResult2, } from '../index';\nimport { difficulty, renderDifficulty } from './difficultyPage';\nimport { logicOfGame } from './logicOfGame';\nimport { forInterval, stopTimerFunc, timerNull, total, } from './timerForGame';\nvar cardsCount;\nexport var renderGameBoard = function () {\n    timerNull();\n    //условие для легкого уровня\n    if (difficulty === 'easy') {\n        cardsCount = 3;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number interval minutes\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number interval seconds\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        //Запускаем таймер\n        forInterval;\n        //Останавливаем таймер при условии\n        stopTimerFunc();\n        return;\n        //Конец условия для легкого уровня\n    }\n    //условие для среднего уровня\n    if (difficulty === 'medium') {\n        cardsCount = 6;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number interval minutes\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number interval seconds\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        //Запускаем таймер\n        forInterval;\n        //Останавливаем таймер при условии\n        stopTimerFunc();\n        return;\n        //Конец условия для среднего уровня\n    }\n    // условие для сложного уровня\n    else {\n        cardsCount = 9;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        console.log(cardsArrayResult.length);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number interval minutes\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number interval seconds\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        //Запускаем таймер\n        forInterval;\n        //Останавливаем таймер при условии\n        stopTimerFunc();\n        return;\n        //Конец условия для легкого уровня\n    }\n};\n//Функция рисует разметку с закрытыми картами\nexport var renderCardsClosed = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n        <div class=\\\"header-row\\\">\\n            <div class=\\\"header-time\\\">\\n                <div class=\\\"time-text\\\">min</div> \\n                <div class=\\\"time-text\\\">sek</div> \\n                <div class=\\\"time-number\\\">00.00</div> \\n            </div>\\n            \\n            <div class=\\\"header-button\\\">\\n                <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n            </div>\\n            \\n            <div class=\\\"cards-container\\\">\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n            </div>\\n        </div>\\n    </div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\n//Функция рисует открытые карты с помощью метода map который проходит по массиву cardsArray\nexport var renderCardsOpen = function () {\n    var appHtml = cardsArray\n        .map(function (card) {\n        return \"<div class=\".concat(card, \"></div>\");\n    })\n        .join('');\n    var containerHtml = \"<div class=\\\"container\\\">\\n    <div class=\\\"header-row\\\">\\n        <div class=\\\"header-time\\\">\\n            <div class=\\\"time-text\\\">min</div> \\n            <div class=\\\"time-text\\\">sek</div> \\n            <div class=\\\"time-number\\\" id=\\\"time-number\\\">00.00</div> \\n        </div>\\n        \\n        <div class=\\\"header-button\\\">\\n            <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n        </div>\\n        <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n    </div>\\n</div>\");\n    if (appEl) {\n        appEl.innerHTML = containerHtml;\n    }\n};\nexport var renderYouWon = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n                        <div class=\\\"column\\\">\\n                            <div class=\\\"column-icon\\\"><img src=\\\"./img/celebration.png\\\" alt=\\\"celebration\\\"></div>\\n                            <div class=\\\"column-alert\\\">\\u0412\\u044B \\u0432\\u044B\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!</div>\\n                            <div class=\\\"column-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</div>\\n                            <div class=\\\"column-time\\\">\".concat(total, \"</div>\\n                            <button class=\\\"column-button\\\" id=\\\"Again\\\">\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430</button>\\n                        </div>\\n                    </div>\");\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n    var playAgain = document.getElementById('Again');\n    if (playAgain) {\n        playAgain.addEventListener('click', function () {\n            renderDifficulty();\n        });\n    }\n};\nexport var renderYouLose = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n                        <div class=\\\"column\\\">\\n                            <div class=\\\"column-icon\\\"><img src=\\\"./img/dead.png\\\" alt=\\\"celebration\\\"></div>\\n                            <div class=\\\"column-alert\\\">\\u0412\\u044B \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!</div>\\n                            <div class=\\\"column-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</div>\\n                            <div class=\\\"column-time\\\">\".concat(total, \"</div>\\n                            <button class=\\\"column-button\\\" id=\\\"Again\\\">\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430</button>\\n                        </div>\\n                    </div>\");\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n    var playAgain = document.getElementById('Again');\n    if (playAgain) {\n        playAgain.addEventListener('click', function () {\n            renderDifficulty();\n        });\n    }\n};\n","import { appEl } from '../index';\nimport { renderGameBoard } from './gameBoard';\nexport var difficulty;\nexport var renderDifficulty = function () {\n    // Стартовая страница с выбором сложности и кнопкой Старт\n    var appHtml = \"<div class=\\\"container\\\">\\n    <div class=\\\"level\\\">\\n        <p class=\\\"level-text\\\">\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C</p>\\n        <div class=\\\"level-numbers\\\">\\n            <input type=\\\"radio\\\" id=\\\"easy\\\" name=\\\"1\\\">\\n            <label for=\\\"easy\\\" class=\\\"level-numbers-box\\\">1</label>\\n\\n            <input type=\\\"radio\\\" id=\\\"medium\\\" name=\\\"1\\\">\\n            <label for=\\\"medium\\\" class=\\\"level-numbers-box\\\">2</label>\\n\\n            <input type=\\\"radio\\\" id=\\\"hard\\\" name=\\\"1\\\">\\n            <label for=\\\"hard\\\" class=\\\"level-numbers-box\\\">3</label>\\n\\n        </div>\\n        <button class=\\\"level-button\\\" id=\\\"Start\\\">\\u0421\\u0442\\u0430\\u0440\\u0442</button>\\n    </div>\\n\\n</div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n    var levels = ['easy', 'medium', 'hard'];\n    // Перебираем уровни\n    levels.forEach(function (level) {\n        var el = document.getElementById(level); // Создаем переменную, которая будет хранить в себе элемент с id уровня\n        // Навешиваем на него универсальный обработчик события\n        if (el) {\n            el.addEventListener('click', function () {\n                if (el) {\n                    el.classList.add('selected');\n                    difficulty = level;\n                    console.log(difficulty);\n                }\n            });\n        }\n    });\n    var startButton = document.getElementById('Start');\n    if (startButton) {\n        startButton.addEventListener('click', function () {\n            renderGameBoard();\n        });\n    }\n};\nexport var renderPlayGround = function () {\n    // Функция рисует игровое поле\n    var appHtml = \"\\n        <p class=\\\"level-text\\\">\\u0418\\u0433\\u0440\\u043E\\u0432\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435</p>\\n        \";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\n","// описываем работу таймера в игре\nimport { stopTimer } from './logicOfGame';\nexport var minutes = 0;\nexport var seconds = 0;\nexport var total = 0;\n//Таймер игры\nexport var startTimer = function () {\n    var minutesBlock = document.querySelector('.minutes');\n    var secondsBlock = document.querySelector('.seconds');\n    seconds++;\n    if (secondsBlock) {\n        secondsBlock.textContent = '0' + String(seconds);\n    }\n    if (seconds > 9 && secondsBlock) {\n        secondsBlock.textContent = String(seconds);\n    }\n    if (seconds > 59) {\n        minutes++;\n        seconds = 0;\n        if (minutesBlock) {\n            minutesBlock.textContent = '0' + minutes;\n        }\n        if (secondsBlock) {\n            secondsBlock.textContent = '00';\n        }\n    }\n    if (minutes > 9) {\n        if (minutesBlock) {\n            minutesBlock.textContent = String(minutes);\n        }\n    }\n    if (minutesBlock && secondsBlock) {\n        total = minutesBlock.textContent + \".\" + secondsBlock.textContent;\n    }\n    stopTimerFunc();\n};\n//Запускаем таймер каждую 1 сек и кладем интервал в переменную\nexport var forInterval = setInterval(function () { return startTimer(); }, 1000);\n//Функция для остановки интервала\nexport var stopInterval = function (_a) {\n    var forInterval = _a.forInterval;\n    clearInterval(forInterval);\n};\n//Если переменная stopTimer = true то запускаем функцию остановки интервала\nexport var stopTimerFunc = function () {\n    if (stopTimer) {\n        stopInterval({ forInterval: forInterval });\n    }\n};\n//Обнуление таймера\nexport var timerNull = function () {\n    minutes = 0;\n    seconds = 0;\n    total = 0;\n};\n","// import { renderCardsClosed } from './components/gameBoard.js';\n// import { renderCardsOpen } from './components/gameBoard.js';\nimport { renderDifficulty } from './components/difficultyPage';\nimport './style.css';\nexport var globalState = null;\nexport var appEl = document.getElementById('app'); // константа с элементом app в который рендерится приложение\n// Массив мастей и значений карт (36 карт)\nexport var cardsArray = [\n    'spades-ace',\n    'spades-king',\n    'spades-queen',\n    'spades-jack',\n    'spades-10',\n    'spades-9',\n    'spades-8',\n    'spades-7',\n    'spades-6',\n    'hearts-ace',\n    'hearts-king',\n    'hearts-queen',\n    'hearts-jack',\n    'hearts-10',\n    'hearts-9',\n    'hearts-8',\n    'hearts-7',\n    'hearts-6',\n    'diamonds-ace',\n    'diamonds-king',\n    'diamonds-queen',\n    'diamonds-jack',\n    'diamonds-10',\n    'diamonds-9',\n    'diamonds-8',\n    'diamonds-7',\n    'diamonds-6',\n    'clubs-ace',\n    'clubs-king',\n    'clubs-queen',\n    'clubs-jack',\n    'clubs-10',\n    'clubs-9',\n    'clubs-8',\n    'clubs-7',\n    'clubs-6',\n];\n// Массив мастей и значений карт без пар\nexport var cardsArrayResult = [];\n// Массив мастей и значений карт с парами\nexport var cardsArrayResult2 = [];\n// Массив отгаданных карт\nexport var guessedCards = [];\n//Функция обнуления массивов\nexport var arreysNull = function () {\n    cardsArrayResult = [];\n    cardsArrayResult2 = [];\n    guessedCards = [];\n};\nrenderDifficulty();\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","firstCard","secondCard","cardsCount","difficulty","opened","boardLocked","stopTimer","flipCard","e","target","console","log","classList","remove","comparison","value","alert","pushGuessedCards","setTimeout","add","document","querySelectorAll","renderYouLose","arreysNull","logicOfGame","forEach","card","addEventListener","guessedCards","push","cardsArrayResult","length","renderYouWon","minutes","seconds","total","forInterval","setInterval","minutesBlock","querySelector","secondsBlock","textContent","String","stopTimerFunc","clearInterval","appHtml","concat","innerHTML","playAgain","getElementById","renderDifficulty","level","el","startButton","addedEl","Math","floor","random","includes","cardsArrayResult2","apply","sort","map","join","containerHtml","closingCards","clas","renderGameBoard"],"sourceRoot":""}