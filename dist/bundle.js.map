{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/./src/components/logicOfGame.ts","webpack://card-game/./src/components/gameBoard.ts","webpack://card-game/./src/components/difficultyPage.ts","webpack://card-game/./src/components/timerForGame.ts","webpack://card-game/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var opened = false;\nvar firstCard, secondCard;\n//Открываем карту и присваиваем карте класс\nvar flipCard = function (e) {\n    var target = e.target;\n    target.classList.remove('closed-card');\n    if (!opened) {\n        //Первый клик\n        opened = true;\n        firstCard = e.srcElement.className;\n    }\n    else {\n        //Второй клик\n        opened = false;\n        secondCard = e.srcElement.className;\n        //Сравниваем\n        comparison();\n    }\n};\n//Функция сравнения\nvar comparison = function () {\n    if (firstCard === secondCard) {\n        alert('Вы победили!');\n    }\n    else {\n        alert('Вы проиграли');\n    }\n};\n//Навешиваем обработчик кликов на элементы с id='card'\nexport var logicOfGame = function () {\n    var cards = document.querySelectorAll('#card');\n    cards.forEach(function (card) {\n        card.addEventListener('click', flipCard);\n    });\n};\n","import { appEl, cardsArray, cardsArrayResult, cardsArrayResult2, } from '../index';\nimport { difficulty } from './difficultyPage';\nimport { logicOfGame } from './logicOfGame';\nimport { startTimer } from './timerForGame';\nvar cardsCount;\nexport var renderGameBoard = function () {\n    //условие для легкого уровня\n    if (difficulty === 'easy') {\n        cardsCount = 3;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number interval minutes\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number interval seconds\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        setInterval(startTimer, 1000);\n        return;\n    }\n    //условие для среднего уровня\n    if (difficulty === 'medium') {\n        cardsCount = 6;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        setInterval(startTimer, 1000);\n        return;\n    }\n    // условие для сложного уровня\n    else {\n        cardsCount = 9;\n        do {\n            var addedEl = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n            if (cardsArrayResult.includes(addedEl)) {\n                console.log('Ничего');\n            }\n            else {\n                cardsArrayResult.push(addedEl);\n            }\n        } while (cardsArrayResult.length !== cardsCount);\n        console.log(cardsArrayResult.length);\n        cardsArrayResult2.push.apply(cardsArrayResult2, cardsArrayResult);\n        cardsArrayResult.push.apply(cardsArrayResult, cardsArrayResult2);\n        var cardsArrayResultResult = cardsArrayResult.sort(function () { return Math.random() - 0.5; });\n        var appHtml = cardsArrayResultResult\n            .map(function (card) {\n            return \"<div class=\".concat(card, \" id='card'></div>\");\n        })\n            .join('');\n        var containerHtml = \"<div class=\\\"container\\\">\\n            <div class=\\\"header-row\\\">\\n                <div class=\\\"header-time\\\">\\n                    <div class=\\\"time-text\\\">min</div>\\n                    <div class=\\\"time-text\\\"></div>  \\n                    <div class=\\\"time-text\\\">sek</div> \\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">00</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-min\\\">.</div>\\n                    <div class=\\\"time-number\\\" id=\\\"time-sec\\\">00</div>\\n                </div>\\n                \\n                <div class=\\\"header-button\\\">\\n                    <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n                </div>\\n                <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n            </div>\\n        </div>\");\n        if (appEl) {\n            appEl.innerHTML = containerHtml;\n        }\n        // Закрываем карты спустя 5 сек\n        var closingCards = function () {\n            var newClass = document.querySelectorAll('#card');\n            newClass.forEach(function (clas) { return clas.classList.add('closed-card'); });\n        };\n        setTimeout(closingCards, 5000);\n        //Логика игры\n        logicOfGame();\n        setInterval(startTimer, 1000);\n        return;\n    }\n};\n//Функция рисует разметку с закрытыми картами\nexport var renderCardsClosed = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n        <div class=\\\"header-row\\\">\\n            <div class=\\\"header-time\\\">\\n                <div class=\\\"time-text\\\">min</div> \\n                <div class=\\\"time-text\\\">sek</div> \\n                <div class=\\\"time-number\\\">00.00</div> \\n            </div>\\n            \\n            <div class=\\\"header-button\\\">\\n                <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n            </div>\\n            \\n            <div class=\\\"cards-container\\\">\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n                <div class=\\\"closed-card\\\"></div>\\n            </div>\\n        </div>\\n    </div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\n//Функция рисует открытые карты с помощью метода map который проходит по массиву cardsArray\nexport var renderCardsOpen = function () {\n    var appHtml = cardsArray\n        .map(function (card) {\n        return \"<div class=\".concat(card, \"></div>\");\n    })\n        .join('');\n    var containerHtml = \"<div class=\\\"container\\\">\\n    <div class=\\\"header-row\\\">\\n        <div class=\\\"header-time\\\">\\n            <div class=\\\"time-text\\\">min</div> \\n            <div class=\\\"time-text\\\">sek</div> \\n            <div class=\\\"time-number\\\" id=\\\"time-number\\\">00.00</div> \\n        </div>\\n        \\n        <div class=\\\"header-button\\\">\\n            <button class=\\\"again\\\" id=\\\"again\\\">\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E</button>\\n        </div>\\n        <div class=\\\"cards-container\\\">\".concat(appHtml, \"</div>\\n    </div>\\n</div>\");\n    if (appEl) {\n        appEl.innerHTML = containerHtml;\n    }\n};\nexport var renderYouWon = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n                        <div class=\\\"column\\\">\\n                            <div class=\\\"column-icon\\\"><img src=\\\"./img/celebration.png\\\" alt=\\\"celebration\\\"></div>\\n                            <div class=\\\"column-alert\\\">\\u0412\\u044B \\u0432\\u044B\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!</div>\\n                            <div class=\\\"column-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</div>\\n                            <div class=\\\"column-time\\\">01.20</div>\\n                            <button class=\\\"column-button\\\" id=\\\"Again\\\">\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430</button>\\n                        </div>\\n                    </div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\nexport var renderYouLose = function () {\n    var appHtml = \"<div class=\\\"container\\\">\\n                        <div class=\\\"column\\\">\\n                            <div class=\\\"column-icon\\\"><img src=\\\"./img/dead.png\\\" alt=\\\"celebration\\\"></div>\\n                            <div class=\\\"column-alert\\\">\\u0412\\u044B \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!</div>\\n                            <div class=\\\"column-text\\\">\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F:</div>\\n                            <div class=\\\"column-time\\\">01.20</div>\\n                            <button class=\\\"column-button\\\" id=\\\"Again\\\">\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430</button>\\n                        </div>\\n                    </div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\n","import { appEl } from '../index';\nimport { renderGameBoard } from './gameBoard';\nexport var difficulty;\nexport var renderDifficulty = function () {\n    // Стартовая страница с выбором сложности и кнопкой Старт\n    var appHtml = \"<div class=\\\"container\\\">\\n    <div class=\\\"level\\\">\\n        <p class=\\\"level-text\\\">\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C</p>\\n        <div class=\\\"level-numbers\\\">\\n            <input type=\\\"radio\\\" id=\\\"easy\\\" name=\\\"1\\\">\\n            <label for=\\\"easy\\\" class=\\\"level-numbers-box\\\">1</label>\\n\\n            <input type=\\\"radio\\\" id=\\\"medium\\\" name=\\\"1\\\">\\n            <label for=\\\"medium\\\" class=\\\"level-numbers-box\\\">2</label>\\n\\n            <input type=\\\"radio\\\" id=\\\"hard\\\" name=\\\"1\\\">\\n            <label for=\\\"hard\\\" class=\\\"level-numbers-box\\\">3</label>\\n\\n        </div>\\n        <button class=\\\"level-button\\\" id=\\\"Start\\\">\\u0421\\u0442\\u0430\\u0440\\u0442</button>\\n    </div>\\n\\n</div>\";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n    var levels = ['easy', 'medium', 'hard'];\n    // Перебираем уровни\n    levels.forEach(function (level) {\n        var el = document.getElementById(level); // Создаем переменную, которая будет хранить в себе элемент с id уровня\n        // Навешиваем на него универсальный обработчик события\n        if (el) {\n            el.addEventListener('click', function () {\n                if (el) {\n                    el.classList.add('selected');\n                    difficulty = level;\n                    console.log(difficulty);\n                }\n            });\n        }\n    });\n    var startButton = document.getElementById('Start');\n    if (startButton) {\n        startButton.addEventListener('click', function () {\n            renderGameBoard();\n        });\n    }\n};\nexport var renderPlayGround = function () {\n    // Функция рисует игровое поле\n    var appHtml = \"\\n        <p class=\\\"level-text\\\">\\u0418\\u0433\\u0440\\u043E\\u0432\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435</p>\\n        \";\n    if (appEl) {\n        appEl.innerHTML = appHtml;\n    }\n};\n","// описываем работу таймера в игре\nvar totalTime;\nvar minutes = 0;\nvar seconds = 0;\nexport var startTimer = function () {\n    var minutesBlock = document.querySelector('.minutes');\n    var secondsBlock = document.querySelector('.seconds');\n    seconds++;\n    if (secondsBlock) {\n        secondsBlock.textContent = '0' + String(seconds);\n    }\n    if (seconds > 9 && secondsBlock) {\n        secondsBlock.textContent = String(seconds);\n    }\n    if (seconds > 59) {\n        minutes++;\n        if (minutesBlock) {\n            minutesBlock.textContent = '0' + minutes;\n        }\n        seconds = 0;\n    }\n};\n","// import { renderCardsClosed } from './components/gameBoard.js';\n// import { renderCardsOpen } from './components/gameBoard.js';\nimport { renderDifficulty } from './components/difficultyPage';\nimport './style.css';\nexport var globalState = null;\nexport var appEl = document.getElementById('app'); // константа с элементом app в который рендерится приложение\n// Массив мастей и значений карт (36 карт)\nexport var cardsArray = [\n    'spades-ace',\n    'spades-king',\n    'spades-queen',\n    'spades-jack',\n    'spades-10',\n    'spades-9',\n    'spades-8',\n    'spades-7',\n    'spades-6',\n    'hearts-ace',\n    'hearts-king',\n    'hearts-queen',\n    'hearts-jack',\n    'hearts-10',\n    'hearts-9',\n    'hearts-8',\n    'hearts-7',\n    'hearts-6',\n    'diamonds-ace',\n    'diamonds-king',\n    'diamonds-queen',\n    'diamonds-jack',\n    'diamonds-10',\n    'diamonds-9',\n    'diamonds-8',\n    'diamonds-7',\n    'diamonds-6',\n    'clubs-ace',\n    'clubs-king',\n    'clubs-queen',\n    'clubs-jack',\n    'clubs-10',\n    'clubs-9',\n    'clubs-8',\n    'clubs-7',\n    'clubs-6',\n];\n// Массив мастей и значений карт без пар\nexport var cardsArrayResult = [];\n// Массив мастей и значений карт с парами\nexport var cardsArrayResult2 = [];\nrenderDifficulty();\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","firstCard","secondCard","cardsCount","difficulty","opened","flipCard","e","target","classList","remove","srcElement","className","comparison","alert","logicOfGame","document","querySelectorAll","forEach","card","addEventListener","minutes","seconds","startTimer","minutesBlock","querySelector","secondsBlock","textContent","String","getElementById","cardsArrayResult","cardsArrayResult2","innerHTML","level","el","add","console","log","startButton","addedEl","Math","floor","random","length","includes","push","apply","appHtml","sort","map","concat","join","containerHtml","closingCards","clas","setTimeout","setInterval","renderGameBoard","renderDifficulty"],"sourceRoot":""}